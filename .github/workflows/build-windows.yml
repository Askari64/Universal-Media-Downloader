name: Build Windows Application

on:
  release:
    types: [created]

jobs:
  build-windows:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies and ffmpeg
        run: |
          python -m pip install --upgrade pip
          pip install customtkinter yt-dlp pyinstaller Pillow
          choco install ffmpeg -y

      - name: Locate ffmpeg and ffprobe paths
        id: locate_ffmpeg
        run: |
          $ffmpegPath = (where.exe ffmpeg).Trim()
          $ffprobePath = (where.exe ffprobe).Trim()
          Write-Host "ffmpeg path: $ffmpegPath"
          Write-Host "ffprobe path: $ffprobePath"
          echo "::set-output name=ffmpeg::$ffmpegPath"
          echo "::set-output name=ffprobe::$ffprobePath"

      - name: Build the application
        run: |
          pyinstaller --noconsole --onedir --windowed --name "Universal Media Downloader" `
            --icon="GUI_Downloader\\icon.ico" `
            --add-binary "${{ steps.locate_ffmpeg.outputs.ffmpeg }};." `
            --add-binary "${{ steps.locate_ffmpeg.outputs.ffprobe }};." `
            "GUI_Downloader\\Universal Media Downloader.py"

      - name: Zip the output folder
        run: |
          powershell Compress-Archive -Path ".\\dist\\Universal Media Downloader\\*" -DestinationPath ".\\dist\\Universal-Media-Downloader-Windows.zip"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/Universal-Media-Downloader-Windows.zip
          asset_name: Universal-Media-Downloader-Windows.zip
          asset_content_type: application/zip
